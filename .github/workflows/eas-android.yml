name: EAS Android Build & Submit

on:
  workflow_dispatch:
    inputs:
      track:
        description: "Play track (internal/alpha/beta/production)"
        required: false
        default: "internal"
      project_dir:
        description: "Project subfolder (blank = repo root)"
        required: false
        default: ""
  push:
    branches: [ main ]

env:
  NODE_VERSION: "20"

jobs:
  build-and-submit:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve working directory
        id: rwd
        run: |
          if [ -n "${{ github.event.inputs.project_dir }}" ]; then
            echo "dir=${{ github.event.inputs.project_dir }}" >> $GITHUB_OUTPUT
          else
            echo "dir=." >> $GITHUB_OUTPUT
          fi

      - name: Show project files
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: ls -la

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Detect package manager
        id: pm
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup PNPM (if needed)
        if: steps.pm.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: |
          set -e
          if [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install
          elif [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then
            corepack enable
            pnpm install --frozen-lockfile || pnpm install
          else
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund || npm ci --legacy-peer-deps --no-audit --no-fund || npm i --legacy-peer-deps --no-audit --no-fund
            else
              npm i --legacy-peer-deps --no-audi
