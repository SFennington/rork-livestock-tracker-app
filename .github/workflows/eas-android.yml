name: EAS Android Build & Submit

on:
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  PROJECT_DIR: "."       # change to subfolder if your app isn't at repo root
  TRACK: "internal"      # internal | alpha | beta | production

jobs:
  build-and-submit:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Show project files
        working-directory: ${{ env.PROJECT_DIR }}
        run: ls -la

      - name: Install dependencies
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          set -e
          if [ -f yarn.lock ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install
          elif [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm install --frozen-lockfile || pnpm install
          else
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund || npm ci --legacy-peer-deps --no-audit --no-fund || npm i --legacy-peer-deps --no-audit --no-fund
            else
              npm i --legacy-peer-deps --no-audit --no-fund
            fi
          fi

      - name: Install EAS CLI
        working-directory: ${{ env.PROJECT_DIR }}
        run: npm i -D eas-cli

      - name: EAS login
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: npx eas whoami || true

      - name: Build Android AAB
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: npx eas build --platform android --profile production --non-interactive --wait

      - name: Write Play service account JSON (if provided)
        if: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON != '' }}
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          # Write the JSON exactly as stored in the secret
          printf "%s" "${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}" > google-play-key.json
          test -s google-play-key.json && echo "Key written."

      - name: Submit to Google Play (auto)
        if: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON != '' }}
        working-directory: ${{ env.PROJECT_DIR }}
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: npx eas submit --platform android --latest --track "${{ env.TRACK }}" --key google-play-key.json --non-interactive

      - name: Submission skipped note
        if: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON == '' }}
        run: echo "No PLAY_SERVICE_ACCOUNT_JSON secret; submission skipped. Download AAB from the EAS build page."
