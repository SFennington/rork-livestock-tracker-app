name: EAS Android Build & Submit

on:
  workflow_dispatch:
    inputs:
      track:
        description: "Play track (internal/alpha/beta/production)"
        required: false
        default: "internal"
      project_dir:
        description: "Project subfolder (blank = repo root)"
        required: false
        default: ""
  push:
    branches: [ main ]
    paths:
      - "**.js"
      - "**.ts"
      - "**.tsx"
      - "package.json"
      - "package-lock.json"
      - "yarn.lock"
      - "pnpm-lock.yaml"
      - "eas.json"
      - "app.json"
      - "app.config.*"
      - ".github/workflows/eas-android.yml"

env:
  NODE_VERSION: "20"
  TRACK: "${{ github.event.inputs.track || 'internal' }}"
  PROJECT_DIR: "${{ github.event.inputs.project_dir || '' }}"

jobs:
  build-and-submit:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve working directory
        id: rwd
        run: |
          if [ -n "${PROJECT_DIR}" ]; then
            echo "dir=${PROJECT_DIR}" >> $GITHUB_OUTPUT
          else
            echo "dir=." >> $GITHUB_OUTPUT
          fi

      - name: Show project files
        run: ls -la
        working-directory: ${{ steps.rwd.outputs.dir }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Detect package manager
        id: pm
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: |
          if [ -f "yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          elif [ -f "pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup PNPM (if needed)
        if: steps.pm.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: |
          set -e
          if [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then
            corepack enable
            yarn install --frozen-lockfile || yarn install
          elif [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then
            corepack enable
            pnpm install --frozen-lockfile || pnpm install
          else
            if [ -f package-lock.json ]; then
              npm ci --no-audit --no-fund || npm ci --legacy-peer-deps --no-audit --no-fund || npm i --legacy-peer-deps --no-audit --no-fund
            else
              npm i --legacy-peer-deps --no-audit --no-fund
            fi
          fi

      - name: Install EAS CLI locally
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: npm i -D eas-cli

      - name: EAS login (token)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: npx eas whoami || true

      - name: Build Android AAB with EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        working-directory: ${{ steps.rwd.outputs.dir }}
        run: npx eas build --platform android --profile production --non-interactive --wait

      - name: Check for Play service account key
        id: playkey
        run: |
          if [ -n "${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}" ]; then
            echo "has_key=true" >> $GITHUB_OUTPUT
          else
            echo "has_key=false" >> $GITHUB_OUTPUT
          fi

      - name: Write Play service account JSON
        if: steps.playkey.outp
